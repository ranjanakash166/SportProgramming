// created by: Prashant Kumar Singh :)
#include <iostream>
#include <algorithm>
#include <utility>
#include <cstring>
#include <string.h>
#include <set>
#include <map>
#include <math.h>
#include <stdio.h>
#include <vector>
#include <functional>
#include <bitset>
#include <iomanip>
#define ll long long
#define gr greater<ll>()
#define pi acos(-1.0)
#define pb push_back
#define MS0(ar) memset(ar,0,sizeof ar)
#define MS1(ar) memset(ar,-1,sizeof ar)
#define f first
#define s second
#define pii pair<int,int>
#define pll pair<ll,ll>
#define ind(a) scanf("%d",&a)
#define inf(a) scanf("%lf",&a)
#define inl(a) scanf("%lld",&a)
#define ins(a) scanf("%s",a)
#define pd(a) printf("%d\n",a)
#define pl(a) printf("%lld\n",a);
#define bitcnt(x) __builtin_popcountll(x)
using namespace std;
const int MAX = 100010;
int pr[MAX], pre[MAX];
bool ans = false;
string x;
int n;
void prime()
{
	pr[0] = pr[1] = 1;
	for (int i = 2; i <= 1000; i++)
	{
		if (!pr[i])
		{
			for (int j = i * i; j <= 100005; j += i)
				pr[j] = 1;
		}
	}
}
int main()
{
 
	/*ios_base::sync_with_stdio(0);
	cin.tie(0);
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#endif*/
	prime();
	pre[0] = 1;
	for (int i = 1; i < MAX; i++)
	{
		int y = i;
		x = "", n = 0, ans = 0;
		while (y > 0)
		{
			int a = y % 10;
			x = (char)(a + 48) + x;
			y /= 10;
			++n;
		}
		int flag = 0;
		for (int mask = 1; mask < (1 << n); mask++)
		{
			int no = 0;
			for (int i = 0; i < n; i++)
			{
				if (mask & (1 << i))
					no = no * 10 + (x[i] - 48);
			}
			if (!pr[no])
				flag = 1;
		}
		if (!flag)
		{
			pre[i] = pre[i - 1] + 1;
		}
		else
			pre[i] = pre[i - 1];
	}
	int t, a, b;
	ind(t);
	while (t--)
	{
		ind(a);
		ind(b);
		if (a > b)
			swap(a, b);
		pd((pre[b] - pre[a - 1]));
	}
	return 0;
} 