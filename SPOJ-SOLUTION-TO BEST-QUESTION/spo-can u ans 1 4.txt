#include<iostream>
#include<stdio.h>
#include<math.h>
#include<cstring>
using namespace std;
#define ll long long
ll bt[100001];
ll a[100001];
ll root[100001];
void update(int x,ll val,int n)
{
	while(x<=n)
	{
		bt[x]+=val;
		x+=(x & -x);
	}
}
ll sum(int x)
{
	ll ans=0;
	while(x>0)
	{
		ans+=bt[x];
		x-=(x & -x);
	}
	return ans;
}
int find(int u)
{
	if(u!=root[u])
	root[u]=find(root[u]);
	return root[u];
}
void modify(int x,int y,int n)
{
  int i=find(x);
  while(x<=i &&i<=y)
  {
  		if(a[i] != 1) {
			update(i, -a[i], n);
			a[i] = (ll)floor(sqrt((double)a[i]));
			update(i, a[i], n);
			if(a[i] == 1) root[i] = i + 1;
		}
		i = find(i + 1);
  }
}
 
int main()
{
	int n, q, i, x, y, t, cs;
	for(cs = 1; scanf("%d", &n) == 1; cs++) {
		memset(bt,0,sizeof bt);
		for(i = 1; i <= n; i++) {
			scanf("%lld", a + i);
			update(i, a[i], n);
			root[i] = i;
		}
		printf("Case #%d:\n", cs);
		scanf("%d", &q);
		while(q--) {
			scanf("%d %d %d", &t, &x, &y);
			if(x > y)
			swap(x,y);
			if(t)
			{
				ll z=sum(y)-sum((x-1));
			 printf("%lld\n",z);
		    }
			else 
			modify(x, y, n);
		}
	//	printf("\n");
	}
	return 0;
} 