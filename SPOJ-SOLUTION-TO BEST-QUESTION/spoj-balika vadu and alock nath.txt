/*NEVER GIVE UP!!!! NEVER!!*/
#include<iostream>
#include<cstdio>
#include<cmath>
#include<algorithm>
#include<map>
#include<string>
#include<vector>
#include<queue>
#include<cstring>
#include<cstdlib>
#include<cassert>
#include<cmath>
#include<stack>
#include<set>
#include<utility>
#define mod 1000000007
#define _ ios_base::sync_with_stdio(0);cin.tie(0);
#define ll long long
#define pi acos(-1.0)
#define f(i,l,r) for(int i=l;i<=r;i++)
#define in_T int t;for(scanf("%d",&t);t--;)
#define in_I(a) scanf("%d",&a)
#define in_F(a) scanf("%lf",&a)
#define in_L(a) scanf("%lld",&a)
#define in_S(a) scanf("%s",a)
#define newline printf("\n")
#define MAX(a,b) a>b?a:b
#define MIN(a,b) a<b?a:b
#define SWAP(a,b) {int tmp=a;a=b;b=tmp;}
#define P_I(a) printf("%d\n",a)
#define P_L(a) printf("%lld\n",a);
using namespace std;
int main()
{
	_
	int l,i,j,t;
	cin>>t;
	while(t--)
	{
	string s1,s2;
	cin>>s1>>s2>>l;
	s1=" "+s1;
	s2=" "+s2;
	int l1=s1.length()-1;
	int l2=s2.length()-1;
	int dp[l1+1][l2+1][l+1];
	memset(dp,-1,sizeof dp);
	//	cout<<dp[l1-1][l2-1][l]<<"\n";
	for(i=0;i<=l1;i++)
	for(j=0;j<=l2;j++)
	dp[i][j][0]=0;
		  for(i=1;i<=l1;i++)
		  {
			for(j=1;j<=l2;j++)
			
			{
				for(int k=1;k<=l;k++)
				{
			dp[i][j][k]=max(dp[i][j][k],max(dp[i-1][j][k],dp[i][j-1][k]));
					if(s1[i]==s2[j]&&dp[i-1][j-1][k-1]!=-1)
					dp[i][j][k]=max(dp[i][j][k],dp[i-1][j-1][k-1]+(int)s1[i]);
					
	            }
	        }
	      }
	   if(dp[l1][l2][l]!=-1)
	    	cout<<dp[l1][l2][l]<<"\n";
	    	else
	    	cout<<"0\n";
	}
	    	return 0;
} 