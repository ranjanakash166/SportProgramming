//Created By Mayur Agarwal :)
 
#include <iostream>
#include <stdio.h>
#include <cmath>
#include <vector>
#include <string>
#include <cstring>
#include <set>
#include <algorithm>
#include <map>
#include <iterator>
#include <functional>
#include <stack>
#include <queue>
 
#define ll long long
#define in(a) scanf("%d",&a)
#define inc(a) scanf("%c",&a)
#define ins(a) scanf("%s", a)
#define pr(a) printf("%lld\n",a)
#define prc(a) printf("%c",a)
#define prs(a) printf("%s\n",a)
#define fori(I,N) for(ll I=0;I<N;I++)
#define forin(i,n) for(ll I=1;I<=N;I++)
#define MS0(X) memset((X), 0, sizeof((X)))
#define MS1(X) memset((X), -1, sizeof((X)))
#define ALL(X) (X).begin(), (X).end()
#define pi   acos(-1.0)
#define mod 1000000007
#define SIZE 200010
 
using namespace std;
typedef pair<ll, ll>pll;
ll dp[SIZE], last_used[30];
char s[SIZE];
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#endif
	//ios_base::sync_with_stdio(0); cin.tie(0);
	int t;
	in(t);
	while (t--)
	{
		ins(s);
		int n = strlen(s);
		MS1(last_used);
		dp[0] = 1;
		for (int i = 1; i <= n; i++)
		{
			dp[i] = 2 * dp[i - 1];
 
			if (last_used[s[i - 1] - 'A'] != -1)
			{
				dp[i] -= dp[last_used[s[i - 1] - 'A'] - 1];
 
			}
			last_used[s[i - 1] - 'A'] = i;
			if (dp[i] >= mod)
				dp[i] -= mod;
			else if (dp[i] < 0)
				dp[i] += mod;
			//cout << last_used[s[i - 1] - 'A'] << endl;
 
 
		}
		pr(dp[n]);
	}
	return 0;
} 